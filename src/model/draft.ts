import { EnumSpatialDataServiceType, EnumAssetType } from '@/model/enum';
import { ServerResponse } from '@/model/response';
import { Provider } from '@/model/account';
import { CatalogueItemCommand } from '@/model/catalogue';

export enum EnumDraftStatus {
  /**
   * Asset is editable
   */
  DRAFT = 'DRAFT',
  /**
   * Asset is submitted and automated metadata is being computed
   */
  SUBMITTED = 'SUBMITTED',
  /**
   * Automated metadata has been computed and HelpDesk review is required
   */
  PENDING_HELPDESK_REVIEW = 'PENDING_HELPDESK_REVIEW',
  /**
   * HelpDesk user rejects the asset
   */
  HELPDESK_REJECTED = 'HELPDESK_REJECTED',
  /**
   * HelpDesk user accepts the asset. Provider review is required. Provider
   * may adjust the visibility of the metadata
   */
  PENDING_PROVIDER_REVIEW = 'PENDING_PROVIDER_REVIEW',
  /**
   * Provider rejects the asset
   */
  PROVIDER_REJECTED = 'PROVIDER_REJECTED',
  /**
   * Provider accepted the asset and final post-processing actions are executed
   */
  POST_PROCESSING = 'POST_PROCESSING',
  /**
   * Draft is published
   */
  PUBLISHED = 'PUBLISHED',
}

export enum EnumSortField {
  CREATED_ON = 'CREATED_ON',
  MODIFIED_ON = 'MODIFIED_ON',
  PROVIDER = 'PROVIDER',
  SERVICE_TYPE = 'SERVICE_TYPE',
  STATUS = 'STATUS',
  TITLE = 'TITLE',
  TYPE = 'TYPE',
  VERSION = 'VERSION',
}

export interface AssetDraftQuery {
  serviceType: EnumSpatialDataServiceType[];
  status: EnumDraftStatus[];
  type: EnumAssetType[];
}

export interface AssetDraft {
  /**
   * Catalogue draft id. Always equal to key property
   */
  assetDraft: string;
  /**
   * Published asset id. The value is generated by the PID service
   */
  assetPublished: string;
  /**
   * Draft data
   */
  command: CatalogueItemCommand;
  /**
   * Creation date in ISO format
   */
  createdOn: string;
  /**
   * Rejection reason if the draft has been rejected by a HelpDesk user
   */
  helpdeskRejectionReason: string;
  /**
   * True if the file should be imported into PostGIS database and published using WMS/WFS endpoints
   */
  ingested: boolean;
  /**
   * Draft unique identifier. Also the key for the catalogue draft record.
   * If the draft is submitted and a workflow instance is initialized, it
   * is used as the business key
   */
  key: string;
  /**
   * Date of lat update in ISO format
   */
  modifiedOn: string;
  /**
   * Owner account key
   */
  owner: string;
  /**
   * Draft parent asset PID
   */
  parentId: string | null;
  /**
   * Rejection reason if the draft has been rejected by the provider
   */
  providerRejectionReason: string;
  /**
   * Publisher details
   */
  publisher: Provider,
  /**
   * Service type (only applicable if type = SERVICE)
   */
  serviceType: EnumSpatialDataServiceType;
  /**
   * Draft status
   */
  status: EnumDraftStatus;
  /**
   * Asset title
   */
  title: string;
  /**
   * Asset type
   */
  type: EnumAssetType;
  /**
   * Asset version
   */
  version: string;
}

export interface AssetDraftReviewCommand {
  reason?: string;
  rejected: boolean;
}

export type HarvestImportResponse = ServerResponse<{ [id: string]: AssetDraft }>;
